# coding: utf-8

from seecode_scanner.lib.core.common import strip
from seecode_scanner.lib.core.common import parse_int
from seecode_scanner.lib.core.common import parse_bool
from seecode_scanner.lib.core.common import parse_category


class Vulnerability(object):

    def __init__(self, **kwargs):
        self.project_scan_path = kwargs.get('project_scan_path')
        self._vuln = {
            'rule_key': strip(kwargs.get("rule_key"), ''),
            'risk_id': strip(kwargs.get("risk_id"), ''),
            'category': parse_category(strip(kwargs.get("category", 'Vulnerability'))),
            'title': strip(kwargs.get("title"), ''),
            'file': strip(kwargs.get("file"), ''),
            'author': strip(kwargs.get("author"), ''),
            'author_email': strip(kwargs.get("author_email"), ''),
            'hash': strip(kwargs.get("hash"), ''),  # last commit
            'start_line': parse_int(kwargs.get("start_line"), 0),
            'end_line': parse_int(kwargs.get("end_line"), 0),
            'report': strip(kwargs.get("report"), ''),
            'code_example': kwargs.get("code_example", ''),
            'is_false_positive': parse_bool(kwargs.get("is_false_positive", False)),
            'whitelist_rule_id': kwargs.get("whitelist_rule_id", ''),
            'evidence_content': kwargs.get("evidence_content", ''),
            'engine': kwargs.get("engine", ''),
        }

    def __str__(self):
        return str(self._vuln)

    @property
    def rule_key(self):
        return self._vuln['rule_key']

    @property
    def category(self):
        return self._vuln['category'].lower()

    @property
    def risk_id(self):
        return self._vuln['risk_id']

    @property
    def file(self):
        return self._vuln['file']

    @property
    def title(self):
        return self._vuln['title']

    @property
    def author(self):
        return self._vuln['author']

    @property
    def hash(self):
        return self._vuln['hash']

    @property
    def start_line(self):
        return self._vuln['start_line']

    @property
    def end_line(self):
        return self._vuln['end_line']

    @property
    def report(self):
        return self._vuln['report']

    @property
    def code_example(self):
        return self._vuln['code_example']

    @property
    def info(self):
        return self._vuln
